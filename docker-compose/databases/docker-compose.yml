version: '3.9'
services:
  mongo1:
    container_name: mongo1
    image: mongo
    volumes:
      - ./data/mongo/mongo1:/data/db
      - ./products-service/rs-init.sh:/scripts/rs-init.sh
      - ./products-service/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - mongors-network
    ports:
      - ${MONGO_PORT_1}:27017
    environment:
      - PUID=1000
      - PGID=1000
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_REPLICA_SET_KEY=${MONGO_REPLICASET_KEY}
      - MONGODB_PORT_NUMBER=${MONGO_PORT_1}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    links:
      - mongo2
      - mongo3
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  mongo2:
    container_name: mongo2
    image: mongo
    volumes:
      - ./data/mongo/mongo2:/data/db
    networks:
      - mongors-network
    ports:
      - ${MONGO_PORT_2}:27017
    environment:
      - PUID=1000
      - PGID=1000
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_REPLICA_SET_KEY=${MONGO_REPLICASET_KEY}
      - MONGODB_PORT_NUMBER=${MONGO_PORT_2}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  mongo3:
    container_name: mongo3
    image: mongo
    volumes:
      - ./data/mongo/mongo3:/data/db
    networks:
      - mongors-network
    ports:
      - ${MONGO_PORT_3}:27017
    environment:
      - PUID=1000
      - PGID=1000
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_REPLICA_SET_KEY=${MONGO_REPLICASET_KEY}
      - MONGODB_PORT_NUMBER=${MONGO_PORT_3}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  auth-mysql:
    container_name: auth-mysql
    image: mysql:5.7
    ports:
      - ${MYSQL_PORT}:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - mysql-network
    restart: unless-stopped
    command: --init-file /docker-entrypoint-initdb.d/auth-mysql/mysql-init.sql
    volumes:
      - ./data/mysql:/var/lib/mysql-files
      - ./auth-server/mysql-init.sql:/docker-entrypoint-initdb.d/auth-mysql/mysql-init.sql
networks:
  mysql-network:
    driver: bridge
  mongors-network:
    driver: bridge

